{"version":3,"file":"app9194a5cce2e6c1393069.js","mappings":"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","sources":["webpack://more-trivia/./src/scripts/ElementCreator.js","webpack://more-trivia/./src/scripts/Sleep.js","webpack://more-trivia/./src/scripts/Lists.js","webpack://more-trivia/./src/scripts/Styles.js","webpack://more-trivia/./src/scripts/Template.js","webpack://more-trivia/./src/scripts/TokenAPI.js","webpack://more-trivia/./src/scripts/StorageController.js","webpack://more-trivia/./src/scripts/CustomError.js","webpack://more-trivia/./src/scripts/TriviaAPI.js","webpack://more-trivia/./src/scripts/TriviaGameHandler.js","webpack://more-trivia/./src/scripts/DisplayController.js"],"sourcesContent":["export const isOverflown = ({ clientWidth, clientHeight, scrollWidth, scrollHeight }) =>\n  scrollHeight > clientHeight || scrollWidth > clientWidth;\n// ##############################################################\nexport const HTMLtoText = function HTMLtoText(htmlCode) {\n  const tempDiv = document.createElement('div');\n  tempDiv.innerHTML = htmlCode;\n  return tempDiv.textContent;\n};\n\n// ############################################################################################################################################################\nexport function nameToId(name) {\n  return name.toLowerCase().split(' ').join('-');\n}\n\n// ############################################################################################################################################################\nexport function appendChildren(element, children) {\n  children.forEach((child) => element.appendChild(child));\n}\n\n// ############################################################################################################################################################\nexport function createElement(elementTag, elementClass, ...attributes) {\n  const element = document.createElement(elementTag);\n  if (elementClass !== undefined) {\n    element.classList.add(elementClass);\n  }\n\n  attributes.forEach((attribute) => {\n    element.setAttribute(attribute[0], attribute[1]);\n  });\n\n  return element;\n}\n\n// ############################################################################################################################################################\nexport function createElementWithClasses(elementTag, elementClassNames, ...attributes) {\n  const element = document.createElement(elementTag);\n  if (elementClassNames !== undefined) {\n    element.setAttribute('class', elementClassNames);\n  }\n\n  attributes.forEach((attribute) => {\n    element.setAttribute(attribute[0], attribute[1]);\n  });\n\n  return element;\n}\n\n// ############################################################################################################################################################\nexport const createContainer = function createContainer(classNames, id) {\n  const container = createElement('div', undefined);\n  if (classNames !== undefined) {\n    container.setAttribute('class', classNames);\n  }\n  if (id !== undefined) {\n    container.setAttribute('id', id);\n  }\n\n  return container;\n};\n\n// ############################################################################################################################################################\n\nexport function createMaterialIcon(style, className, name) {\n  const icon = createElement('span', className);\n  icon.classList.add(`material-symbols-${style}`);\n  icon.textContent = ` ${name} `;\n  return icon;\n}\n// ############################################################################################################################################################\n\nexport const createWeatherIcon = function createWeatherIcon(name, className = '') {\n  const icon = createElement('i', 'wi');\n  icon.classList.add(`wi-${name}`);\n  if (className !== '') {\n    icon.classList.add(className);\n  }\n  return icon;\n};\n// ############################################################################################################################################################\n\nexport const getTransitionTime = function getTransitionTime(element) {\n  return Number(getComputedStyle(element).getPropertyValue('transition-duration').slice(0, -1));\n};\n","const sleep = async function sleep(time) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve();\n    }, time);\n  });\n};\n\nexport default sleep;\n","const lists = {\n  difficulties: {\n    any: 'Any Difficulty',\n    easy: 'Easy',\n    medium: 'Medium',\n    hard: 'Hard',\n  },\n\n  categories: [\n    'Any Category',\n    'General Knowledge',\n    'Entertainment: Books',\n    'Entertainment: Film',\n    'Entertainment: Music',\n    'Entertainment: Musicals, Theaters',\n    'Entertainment: Television',\n    'Entertainment: Video Games',\n    'Entertainment: Board Games',\n    'Science: Nature',\n    'Science: Computers',\n    'Science: Mathematics',\n    'Mythology',\n    'Sports',\n    'Geography',\n    'History',\n    'Politics',\n    'Art',\n    'Celebrities',\n    'Animals',\n    'Vehicles',\n    'Entertainment: Comics',\n    'Science: Gadgets',\n    'Entertainment: Anime, Manga',\n    'Entertainment: Cartoon, Animations',\n  ],\n};\n\nexport default lists;\n","const styles = {\n  inputFieldStyle: 'w-full flex flex-col p-2 gap-1',\n  inputStyle: 'px-2 py-1 w-full rounded-md border-2 border-slate-900/5 bg-slate-400/20',\n  labelStyle: 'text-sm text-slate-950/75 font-medium ml-2',\n  questionTextStyle:\n    'text-center overflow-y-auto font-medium text-xl leading-normal  px-6 pt-6 sm:text-2xl md:text-3xl lg:leading-relaxed max-h-full',\n  multipleAnswerBtnStyle:\n    'border-2 data-na:hover:bg-green-600/10 bg-slate-900  transition-colors font-medium capitalize data-na:active:bg-slate-50/25 grid place-items-center text-center lg:text-2xl rounded-xl h-10 lg:h-20 lg:w-full data-correct:border-green-500 data-correct:bg-green-800 data-wrong:border-red-500 data-wrong:bg-red-800 data-na:hover:border-green-500 data-correct:animate-ping-once data-wrong:animate-pulse-fast duration-300',\n  booleanAnswerBtnStyle:\n    'grid h-20 cursor-pointer place-items-center rounded-xl border-2 bg-slate-900 text-center text-lg font-bold capitalize shadow-inner transition-colors data-na:hover:bg-green-600/10 data-na:active:bg-slate-50/40 data-correct:border-green-500 data-correct:bg-green-800 data-wrong:border-red-500 data-wrong:bg-red-800 data-na:hover:border-green-500 sm:text-2xl lg:w-full data-correct:animate-ping-once data-wrong:animate-pulse-fast duration-300',\n  ratedStyle: [\n    'text-red-800',\n    'text-orange-800',\n    'text-amber-700',\n    'text-yellow-700',\n    'text-lime-700',\n    'text-green-600',\n    'text-emerald-600',\n  ],\n};\n\nexport default styles;\n","import lists from './Lists';\nimport { createContainer, createElementWithClasses, appendChildren } from './ElementCreator';\nimport styles from './Styles';\n\n// ###################################################\nclass Template {\n  // create start form #########################################\n  static createStartForm() {\n    const formContainer = createContainer(\n      'absolute z-10 rounded-lg w-full h-full grid items-center',\n      'start-form-container'\n    );\n    const startForm = createElementWithClasses(\n      'form',\n      'grid bg-slate-100 gap-2 px-2 py-4 transition-transform duration-500 rounded-md text-slate-950 w-4/5 mx-auto max-w-md',\n      ['action', '#']\n    );\n    // close button\n    const closeBtn = createElementWithClasses(\n      'button',\n      'justify-self-end mr-2 text-slate-800',\n      ['type', 'button'],\n      ['id', 'close-form']\n    );\n    const closeBtnIcon = createElementWithClasses(\n      'span',\n      'material-symbols-rounded bg-slate-300/25 hover:bg-slate-400/25 active:bg-slate-600/25 transition-colors rounded-full p-1'\n    );\n    closeBtnIcon.textContent = 'close';\n    closeBtn.appendChild(closeBtnIcon);\n    startForm.appendChild(closeBtn);\n    // loading container\n    const loading = createContainer(\n      'w-full hidden h-full z-20 fixed top-0 left-0 grid items-center justify-center bg-slate-900/25 backdrop-blur-[2px]',\n      'start-loading'\n    );\n    const loader = createContainer('custom-loader');\n    loading.appendChild(loader);\n    startForm.appendChild(loading);\n    // form content --\n    let inputField;\n    let label;\n    let input;\n    // number of q input\n    inputField = createContainer(styles.inputFieldStyle);\n    label = createElementWithClasses('label', styles.labelStyle, ['for', 'number-of-questions']);\n    label.textContent = 'Number of Questions';\n    input = createElementWithClasses(\n      'input',\n      styles.inputStyle,\n      ['type', 'number'],\n      ['id', 'number-of-questions'],\n      ['name', 'amount'],\n      ['min', '1'],\n      ['max', '50'],\n      ['step', '1'],\n      ['value', '10'],\n      ['required', true]\n    );\n    appendChildren(inputField, [label, input]);\n    startForm.appendChild(inputField);\n    // select category\n    inputField = createContainer(styles.inputFieldStyle);\n    label = createElementWithClasses('label', styles.labelStyle, ['for', 'category']);\n    label.textContent = 'Select Category';\n    input = createElementWithClasses(\n      'select',\n      styles.inputStyle,\n      ['name', 'category'],\n      ['id', 'category'],\n      ['name', 'category'],\n      ['required', true]\n    );\n\n    lists.categories.forEach((category, index) => {\n      let value;\n      if (category === 'Any Category') {\n        value = 'any';\n      } else {\n        value = index + 8;\n      }\n      const opt = createElementWithClasses('option', 'text-sm', ['value', `${value}`]);\n      opt.textContent = category;\n      input.appendChild(opt);\n    });\n    appendChildren(inputField, [label, input]);\n    startForm.appendChild(inputField);\n    // select difficulty\n    inputField = createContainer(styles.inputFieldStyle);\n    label = createElementWithClasses('label', styles.labelStyle, ['for', 'difficulty']);\n    label.textContent = 'Select Difficulty';\n    input = createElementWithClasses(\n      'select',\n      styles.inputStyle,\n      ['name', 'difficulty'],\n      ['id', 'difficulty'],\n      ['required', true]\n    );\n    Object.entries(lists.difficulties).forEach((difficulty) => {\n      const [value, text] = difficulty;\n      const opt = createElementWithClasses('option', 'text-sm', ['value', `${value}`]);\n      opt.textContent = text;\n      input.appendChild(opt);\n    });\n    appendChildren(inputField, [label, input]);\n    startForm.appendChild(inputField);\n    // submit button\n    inputField = createContainer('w-full p-2');\n    const submitBtn = createElementWithClasses(\n      'button',\n      'text-center w-full rounded-lg bg-slate-900 hover:bg-slate-800 active:bg-slate-700 font-bold transition-colors py-2 text-slate-50',\n      ['type', 'submit']\n    );\n    submitBtn.textContent = 'Start';\n    inputField.appendChild(submitBtn);\n    startForm.appendChild(submitBtn);\n    formContainer.appendChild(startForm);\n\n    return formContainer;\n  }\n\n  // create landing page #########################################\n  static createLandingPage() {\n    // create main container\n    const container = createContainer(\n      'grid place-content-center w-full h-full duration-500 transition-all scale-0',\n      'landing-page'\n    );\n    // create header (page title)\n    const header = createElementWithClasses(\n      'header',\n      'grid md:justify-items-center gap-4 place-content-center transition-opacity'\n    );\n    const title = createElementWithClasses(\n      'h1',\n      'text-5xl font-extrabold sm:text-6xl md:text-7xl lg:text-8xl font-display'\n    );\n    title.textContent = 'MoreTrivia';\n    // start button\n    const startBtn = createElementWithClasses(\n      'button',\n      'rounded-lg border-2 mx-2 hover:bg-slate-100/25 active:bg-slate-100 focus:bg-slate-100/25 active:text-slate-950 active:border-slate-950 font-bold transition-colors md:text-xl md:w-3/5 py-2',\n      ['id', 'start-game-button']\n    );\n    startBtn.textContent = 'Start';\n    appendChildren(header, [title, startBtn]);\n\n    container.appendChild(header);\n    return container;\n  }\n\n  // ########################################################\n  static createGameTemplate() {\n    const container = createContainer(\n      'grid grid-rows-[auto_minmax(0,1fr)_auto] gap-10 h-screen sm:p-5 duration-500 transition-opacity opacity-0',\n      'game-container'\n    );\n    // home button\n    const btnContainer = createContainer('grid sm:place-self-end', 'home');\n    const homeBtn = createElementWithClasses(\n      'button',\n      'p-2 m-2 font-bold rounded-lg bg-blue-900/25 shadow-sm sm:px-4 md:text-lg lg:text-xl lg:px-6 hover:bg-blue-900/40 active:bg-sky-800/50 transition-colors'\n    );\n    homeBtn.textContent = 'Home Screen';\n    btnContainer.appendChild(homeBtn);\n\n    // questions container\n    const questionContainer = createContainer(\n      'grid mx-4 max-h-full col-start-1 col-end-1 row-start-2 row-end-3 grid-rows-2',\n      'questions-container'\n    );\n\n    // progress bar\n    const progressBarContainer = createContainer(\n      'w-auto mx-4 bg-slate-200 rounded-full h-2.5 mb-4 grid'\n    );\n    const progressBar = createContainer(\n      'bg-blue-600 h-2.5 transition-[width] duration-1000 delay-200 rounded-full',\n      'progress-bar'\n    );\n    progressBar.style.width = '0%';\n    progressBarContainer.appendChild(progressBar);\n    appendChildren(container, [btnContainer, questionContainer, progressBarContainer]);\n\n    return container;\n  }\n\n  // ########################################################\n  static #createMultipleOptions(correctAnswer, incorrectAnswers) {\n    const optionsContainer = createElementWithClasses(\n      'div',\n      'grid gap-4 content-center p-2 my-4 lg:w-[50%] lg:mx-auto lg:grid-cols-2',\n      ['id', 'options']\n    );\n    const answers = incorrectAnswers;\n\n    const randomIndex = Math.floor(Math.random() * 4);\n    answers.splice(randomIndex, 0, correctAnswer);\n    answers.forEach((answer) => {\n      const answerBtn = createElementWithClasses(\n        'button',\n        styles.multipleAnswerBtnStyle,\n        ['data-answer', 'na'],\n        ['data-value', `${answer}`]\n      );\n      answerBtn.textContent = answer;\n      optionsContainer.appendChild(answerBtn);\n    });\n    return optionsContainer;\n  }\n\n  // ########################################################\n  static #createBooleanOptions() {\n    const optionsContainer = createElementWithClasses(\n      'div',\n      'grid grid-cols-2 gap-4 content-center p-4 lg:grid-cols-1 lg:grid-rows-[auto_auto] lg:w-[33%] lg:mx-auto',\n      ['id', 'options']\n    );\n    // true button\n    const trueBtn = createElementWithClasses(\n      'button',\n      styles.booleanAnswerBtnStyle,\n      ['data-answer', 'na'],\n      ['data-value', 'True']\n    );\n    trueBtn.textContent = 'True';\n    // false button\n    const falseBtn = createElementWithClasses(\n      'button',\n      styles.booleanAnswerBtnStyle,\n      ['data-answer', 'na'],\n      ['data-value', 'False']\n    );\n    falseBtn.textContent = 'False';\n\n    appendChildren(optionsContainer, [trueBtn, falseBtn]);\n    return optionsContainer;\n  }\n\n  // ########################################################\n  static createQuestionContainer(index, triviaItem) {\n    const questionContainer = createContainer(\n      'grid mx-4 max-h-full col-start-1 col-end-1 duration-1000 ease-in-out row-start-2 row-end-3 grid-rows-2 opacity-0 transition-opacity',\n      'questions-container'\n    );\n\n    // question details\n    const questionDesc = createContainer(\n      'bg-slate-200/10 relative rounded-2xl max-h-full px-2 py-6 lg:p-10 gap-1 grid lg:mx-[10%]'\n    );\n    const questionNumber = createElementWithClasses(\n      'span',\n      'font-bold px-4 py-1 text-xl bg-slate-50 text-slate-800 w-12 h-12 grid place-content-center italic rounded-full absolute top-0 left-10 lg:left-20 -translate-y-2/4 -translate-x-2/4 lg:w-20 lg:h-20 lg:text-3xl',\n      ['id', 'index']\n    );\n    questionNumber.textContent = `#${index + 1}`;\n    const questionText = createElementWithClasses('p', styles.questionTextStyle);\n    questionText.innerHTML = triviaItem.question.toString();\n    appendChildren(questionDesc, [questionNumber, questionText]);\n    questionContainer.appendChild(questionDesc);\n    // question options\n    let optionsContainer = createContainer();\n\n    if (triviaItem.type === 'boolean') {\n      optionsContainer = this.#createBooleanOptions();\n    } else if (triviaItem.type === 'multiple') {\n      optionsContainer = this.#createMultipleOptions(\n        triviaItem.correct_answer,\n        triviaItem.incorrect_answers\n      );\n    }\n\n    questionContainer.appendChild(optionsContainer);\n    return questionContainer;\n  }\n\n  // ########################################################\n  static createGameOverScreen = function createGameOverScreen(score, maxScore) {\n    const gameOverContainer = createContainer(\n      'grid gap-2 w-full h-full content-center duration-500 text-center sm:w-80 mx-auto transition-opacity opacity-0',\n      'game-over-container'\n    );\n    const title = createElementWithClasses('h2', 'text-4xl p-2 font-bold font-display');\n    // title\n    title.textContent = 'Trivia Quiz Ended';\n    // scoreboard\n    const scoreboard = createContainer('bg-slate-50 p-2 sm:rounded-lg text-slate-950');\n    const scoreboardTitle = createElementWithClasses('p', 'text-lg font-thin text-slate-950/70');\n    scoreboardTitle.textContent = 'Your Score';\n    const scoreContainer = createContainer(\n      'flex gap-2 items-center text-5xl p-1 justify-center opacity-0 transition-opacity duration-500',\n      'score-container'\n    );\n    const currentScoreSpan = createElementWithClasses('span', 'font-semibold', ['id', 'score']);\n    currentScoreSpan.classList.add(\n      `${styles.ratedStyle[Math.floor((score / maxScore) * (styles.ratedStyle.length - 1))]}`\n    );\n    currentScoreSpan.textContent = score;\n    const slash = createElementWithClasses('span', 'text-2xl font-thin');\n    slash.textContent = '/';\n    const maxScoreSpan = createElementWithClasses('span', 'font-semibold', ['id', 'max-score']);\n    maxScoreSpan.textContent = maxScore;\n    appendChildren(scoreContainer, [currentScoreSpan, slash, maxScoreSpan]);\n    appendChildren(scoreboard, [scoreboardTitle, scoreContainer]);\n\n    // home button\n    const homeBtn = createElementWithClasses(\n      'button',\n      'p-3 font-bold rounded-lg bg-blue-900/25 shadow-sm hover:bg-blue-900/40 active:bg-sky-800/50 transition-colors m-4 border-2 border-slate-50 sm:mx-0 md:text-lg lg:text-xl lg:px-6',\n      ['id', 'home-screen-button']\n    );\n    homeBtn.textContent = 'Home Screen';\n    appendChildren(gameOverContainer, [title, scoreboard, homeBtn]);\n    return gameOverContainer;\n  };\n}\n\nexport default Template;\n","import { loadToken, saveToken, removeToken } from './StorageController';\n\nclass TokenAPI {\n  static #token;\n\n  static #baseApiTokenURL = 'https://opentdb.com/api_token.php';\n\n  // ##############################################################\n  static async getToken() {\n    if (!this.#token) {\n      const previousToken = loadToken();\n      if (previousToken) {\n        this.#token = previousToken;\n      } else {\n        this.#token = await this.#getNewToken();\n        saveToken(this.#token);\n      }\n    }\n    return this.#token;\n  }\n\n  // ##############################################################\n  static async #getNewToken() {\n    const response = await fetch(`${this.#baseApiTokenURL}?command=request`, { mode: 'cors' });\n    if (!response.ok || response.status !== 200) {\n      throw new Error(response.statusText);\n    }\n    const tokenObject = await response.json();\n    if (tokenObject.response_code === 0) {\n      return tokenObject.token;\n    }\n    throw new Error(tokenObject.response_message);\n  }\n\n  // ##############################################################\n  static async resetToken() {\n    if (this.#token) {\n      const response = await fetch(\n        `${this.#baseApiTokenURL}?command=request&token=${this.#token}`,\n        {\n          mode: 'cors',\n        }\n      );\n      if (!response.ok || response.status !== 200) {\n        throw new Error(response.statusText);\n      }\n      const tokenObject = await response.json();\n      if (tokenObject.response_code === 0) {\n        this.#token = tokenObject.token;\n      } else {\n        throw new Error('renewal failed');\n      }\n    }\n  }\n\n  // ##############################################################\n  static deleteToken() {\n    this.#token = null;\n    removeToken();\n  }\n}\n\nexport default TokenAPI;\n","export const saveToken = function saveToken(token) {\n  localStorage.setItem('token', JSON.stringify(token));\n};\n\nexport const loadToken = function loadToken() {\n  return JSON.parse(localStorage.getItem('token'));\n};\n\nexport const removeToken = function removeToken() {\n  localStorage.removeItem('token');\n};\n","class CustomError extends Error {\n  constructor(errorHeader = 'Error', ...params) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(...params);\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CustomError);\n    }\n\n    this.name = 'CustomError';\n    // Custom debugging information\n    this.errorHeader = errorHeader;\n  }\n}\n\nexport default CustomError;\n","import TokenAPI from './TokenAPI';\nimport CustomError from './CustomError';\n\nclass TriviaAPI {\n  static #baseApiURL = 'https://opentdb.com/api.php';\n\n  static #baseApiCategoryCountURL = 'https://opentdb.com/api_count.php';\n\n  // ##############################################################\n  static async getMaxAmount(category, difficulty) {\n    // no maximum for any category\n    if (category === 'any') {\n      return 500;\n    }\n\n    const response = await fetch(`${this.#baseApiCategoryCountURL}?category=${category}`, {\n      mode: 'cors',\n    });\n    if (response.ok && response.status === 200) {\n      const difficultyOptStr = `_${difficulty}`;\n      const categoryMaxQuestions = await response.json();\n      return categoryMaxQuestions.category_question_count[\n        `total${difficulty === 'any' ? '' : difficultyOptStr}_question_count`\n      ];\n    }\n    throw new Error(response.statusText);\n  }\n\n  // ##############################################################\n\n  static async #errorHandler(code) {\n    if (code === 1) {\n      return new CustomError(\n        'No Results',\n        \"Could not return results. The API doesn't have enough questions for your query.\"\n      );\n    }\n    if (code === 2) {\n      return new CustomError(\n        'Invalid Parameter',\n        \"Contains an invalid parameter. Arguments passed in aren't valid.\"\n      );\n    }\n    if (code === 3) {\n      TokenAPI.deleteToken();\n      return new CustomError('Token Not Found', 'Session Token does not exist.');\n    }\n    if (code === 4) {\n      TokenAPI.resetToken();\n      return new CustomError(\n        'Token Empty',\n        'Session Token has returned all possible questions for the specified query. Resetting the Token is necessary.'\n      );\n    }\n    if (code === 5) {\n      return new CustomError(\n        'Rate Limit',\n        'Too many requests have occurred. Each IP can only access the API once every 5 seconds.'\n      );\n    }\n    return new Error('Something Strange happened');\n  }\n\n  // ##############################################################\n  static async fetchTriviaData(amount, category, difficulty, token) {\n    const catOptionStr = category === 'any' ? '' : `&category=${category}`;\n    const diffOptionStr = difficulty === 'any' ? '' : `&difficulty=${difficulty}`;\n    const tokenOptionStr = token === undefined ? '' : `&token=${token}`;\n\n    const response = await fetch(\n      `${this.#baseApiURL}?amount=${amount}${catOptionStr}${diffOptionStr}${tokenOptionStr}`,\n      {\n        mode: 'cors',\n      }\n    );\n    if (!response.ok || response.status !== 200) {\n      throw new Error(response.statusText);\n    }\n    const triviaData = await response.json();\n    if (triviaData.response_code === 0) {\n      return triviaData;\n    }\n    throw this.#errorHandler(triviaData.response_code);\n  }\n\n  // ##############################################################\n}\n\nexport default TriviaAPI;\n","import { HTMLtoText } from './ElementCreator';\nimport TokenAPI from './TokenAPI';\nimport TriviaAPI from './TriviaAPI';\n\nlet questions;\nlet playerChoice;\nlet index;\nlet score;\n\nconst convertHTMLValues = function convertHTMLValues(dataList) {\n  const newList = [];\n  dataList.forEach((qData) => {\n    const newData = qData;\n    newData.question = HTMLtoText(newData.question);\n    newData.correct_answer = HTMLtoText(newData.correct_answer);\n\n    if (newData.type === 'multiple') {\n      const tempArr = [];\n      newData.incorrect_answers.forEach((answer) => {\n        tempArr.push(HTMLtoText(answer));\n      });\n      newData.incorrect_answers = tempArr;\n    }\n    newList.push(newData);\n  });\n  return newList;\n};\n\nexport const getNumberOfQuestions = function getNumberOfQuestions() {\n  return questions.length;\n};\n\nexport const getCurrentIndex = function getCurrentIndex() {\n  return index;\n};\n\nexport const getCurrentQuestion = function getCurrentQuestion() {\n  return questions[index];\n};\n\nexport const getScore = function getScore() {\n  return score;\n};\n\nexport const checkAnswer = function checkIfAnswerIsCorrect(answer) {\n  return answer === questions[index].correct_answer;\n};\n\nexport const playerChose = function playerChose(chosenAnswer) {\n  playerChoice = chosenAnswer;\n  if (checkAnswer(playerChoice)) {\n    score += 1;\n    return true;\n  }\n  return false;\n};\n\nexport const getNextQuestion = function getNextQuestion() {\n  index += 1;\n  if (questions[index]) {\n    return questions[index];\n  }\n  return null;\n};\n\nexport const initiateGame = function initiateGame() {\n  score = 0;\n  index = -1;\n};\n\nexport const getGameData = async function getGameData(amount, category, difficulty) {\n  try {\n    // get or create token\n    const token = await TokenAPI.getToken();\n    // get trivia data\n    const triviaData = await TriviaAPI.fetchTriviaData(amount, category, difficulty, token);\n    questions = convertHTMLValues(triviaData.results);\n    console.log(questions);\n\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n","/* eslint-disable no-use-before-define */\nimport { getTransitionTime, isOverflown } from './ElementCreator';\nimport sleep from './Sleep';\nimport Template from './Template';\nimport TriviaAPI from './TriviaAPI';\nimport {\n  checkAnswer,\n  getCurrentIndex,\n  getGameData,\n  getNextQuestion,\n  getNumberOfQuestions,\n  getScore,\n  initiateGame,\n  playerChose,\n} from './TriviaGameHandler';\n\nlet isLoading;\nlet answerClicked;\nlet gameStarted;\n\n// ##############################################################\nconst showFormLoading = function showFormLoading() {\n  if (!isLoading) {\n    isLoading = true;\n    document.getElementById('start-loading').classList.remove('hidden');\n  }\n};\n// ##############################################################\nconst hideFormLoading = function hideFormLoading() {\n  if (isLoading) {\n    document.getElementById('start-loading').classList.add('hidden');\n    isLoading = false;\n  }\n};\n// ##############################################################\nconst displayError = function displayError(error) {\n  console.error(error);\n};\n// ##############################################################\nconst setMaxAmountInput = async function setMaxAmountInput() {\n  const category = document.getElementById('category').value;\n  const difficulty = document.getElementById('difficulty').value;\n  try {\n    showFormLoading();\n    let maxAllowedAmount = await TriviaAPI.getMaxAmount(category, difficulty);\n    hideFormLoading();\n    maxAllowedAmount = Math.min(maxAllowedAmount, 50);\n    const amount = document.getElementById('number-of-questions');\n    amount.setAttribute('max', maxAllowedAmount);\n    const currentValue = amount.value;\n    amount.value = Math.min(maxAllowedAmount, currentValue);\n  } catch (error) {\n    displayError(error);\n  }\n};\n// ##############################################################\nconst closeStartGameForm = async function closeStartANewGameForm() {\n  const startGameForm = document.getElementById('start-form-container');\n  const form = startGameForm.querySelector('form');\n  const trTime = getTransitionTime(form);\n  form.classList.remove('scale-y-100');\n  document.querySelector('#landing-page header').classList.remove('opacity-0');\n\n  await sleep(trTime * 1000 + 10);\n  startGameForm.remove();\n};\n\n// ##############################################################\nconst goBackToHome = async function goBackToHome() {\n  const currentContainer = document.body.firstElementChild;\n  const trTime = getTransitionTime(currentContainer);\n  currentContainer.style.opacity = '0';\n  await sleep(trTime * 1000 + 100);\n  currentContainer.remove();\n  await sleep(10);\n  showStartingScreen();\n};\n// ##############################################################\nconst displayGameOverScreen = async function displayGameOverScreen() {\n  let trTime;\n  const gameContainer = document.getElementById('game-container');\n  if (gameContainer) {\n    gameContainer.style.opacity = '0';\n    trTime = getTransitionTime(gameContainer);\n    await sleep(trTime * 1000 + 10);\n    gameContainer.remove();\n  }\n  // create game over page\n  const gameOverContainer = Template.createGameOverScreen(getScore(), getNumberOfQuestions());\n  document.body.appendChild(gameOverContainer);\n  await sleep(20);\n  gameOverContainer.style.opacity = '1';\n  trTime = getTransitionTime(gameOverContainer);\n  await sleep(trTime * 1000 + 10);\n\n  document.getElementById('score-container').style.opacity = '1';\n  document.getElementById('home-screen-button').addEventListener('click', goBackToHome);\n};\n\n// ##############################################################\nconst goToGamePhase = async function goToGamePhase() {\n  // remove landing page\n  const landingPage = document.getElementById('landing-page');\n  await closeStartGameForm();\n  let trTime = getTransitionTime(landingPage);\n  landingPage.classList.add('opacity-0');\n  landingPage.classList.remove('opacity-100');\n  await sleep(trTime * 2 * 1000 + 10);\n  landingPage.remove();\n  // show game phase template\n  const gameTemplate = Template.createGameTemplate();\n  document.body.appendChild(gameTemplate);\n  await sleep(10);\n  gameTemplate.classList.add('opacity-100');\n  trTime = getTransitionTime(gameTemplate);\n  await sleep(trTime * 1000 + 10);\n  gameTemplate.querySelector('#home button').addEventListener('click', goBackToHome);\n};\n\n// ##############################################################\nconst updateProgressBar = async function updateProgressBar() {\n  const progressBar = document.getElementById('progress-bar');\n  const trTime = getTransitionTime(progressBar);\n  progressBar.style.width = `${Math.round(\n    ((getCurrentIndex() + 1) / getNumberOfQuestions()) * 100\n  )}%`;\n  await sleep(trTime * 1000 + 10);\n};\n// ##############################################################\nconst showNextQuestion = async function showNextQuestion() {\n  // if end of quiz\n  const question = getNextQuestion();\n  if (question === null) {\n    await displayGameOverScreen();\n    return;\n  }\n\n  // remove previous question\n  let questionContainer = document.getElementById('questions-container');\n  if (questionContainer) {\n    const trTime = getTransitionTime(questionContainer);\n    questionContainer.classList.add('opacity-0');\n    questionContainer.classList.remove('opacity-100');\n    await sleep(trTime * 1000 + 10);\n    questionContainer.remove();\n  }\n\n  // create new question page\n  questionContainer = Template.createQuestionContainer(getCurrentIndex(), question);\n  document.getElementById('home').insertAdjacentElement('afterend', questionContainer);\n  await sleep(20);\n  if (question.type === 'multiple') {\n    document.querySelectorAll('#options button').forEach((button) => {\n      if (isOverflown(button)) {\n        button.classList.remove('text-2xl');\n        button.classList.add('text-sm');\n      }\n    });\n  }\n\n  questionContainer.classList.add('opacity-100');\n\n  answerClicked = false;\n\n  // ##############################################################\n  const displayAnswer = async function displayAnswer() {\n    if (!answerClicked) {\n      answerClicked = true;\n      const chosenAnswer = this.getAttribute('data-value');\n      const chosenAnswerIsCorrect = playerChose(chosenAnswer);\n      let pulseTime = 0;\n      let pulseCount = 0;\n      if (chosenAnswerIsCorrect) {\n        this.setAttribute('data-answer', 'correct');\n      } else {\n        this.setAttribute('data-answer', 'wrong');\n        pulseTime = getTransitionTime(this);\n        pulseCount = getComputedStyle(this).getPropertyValue('animation-iteration-count');\n      }\n      document.querySelectorAll('#options button').forEach((answerBtn) => {\n        answerBtn.setAttribute('disabled', '');\n        if (answerBtn !== this) {\n          answerBtn.removeAttribute('data-answer');\n          if (!chosenAnswerIsCorrect && checkAnswer(answerBtn.getAttribute('data-value'))) {\n            answerBtn.setAttribute('data-answer', 'correct');\n          }\n        }\n      });\n      const trTime = Math.max(pulseTime * pulseCount * 1000, 1000);\n      await sleep(trTime + 500);\n      await updateProgressBar();\n      showNextQuestion();\n    }\n  };\n  // event listeners\n  document.querySelectorAll('#options button').forEach((answerBtn) => {\n    answerBtn.addEventListener('click', displayAnswer, { once: true });\n  });\n};\n\n// ##############################################################\nconst showStartGameForm = function showStartANewGameForm() {\n  if (isLoading || gameStarted) {\n    return;\n  }\n  // show form\n  const startGameForm = Template.createStartForm();\n  const landingPage = document.getElementById('landing-page');\n  startGameForm.querySelector('form').classList.add('scale-y-0');\n  landingPage.appendChild(startGameForm);\n  setTimeout(() => {\n    startGameForm.querySelector('form').classList.add('scale-y-100');\n    landingPage.querySelector('header').classList.add('opacity-0');\n  }, 10);\n\n  // add events\n  // close form event\n  document.getElementById('close-form').addEventListener('click', closeStartGameForm);\n  // change input event\n  startGameForm.querySelector('#category').addEventListener('change', setMaxAmountInput);\n  startGameForm.querySelector('#difficulty').addEventListener('change', setMaxAmountInput);\n  // form submit event\n  startGameForm.querySelector('form').addEventListener('submit', async (e) => {\n    e.preventDefault();\n    if (isLoading || gameStarted) {\n      return;\n    }\n    const formData = Array.from(new FormData(e.target));\n    const amount = formData[0][1];\n    const category = formData[1][1];\n    const difficulty = formData[2][1];\n\n    showFormLoading();\n    const receivedGameData = await getGameData(amount, category, difficulty);\n    hideFormLoading();\n    if (receivedGameData) {\n      gameStarted = true;\n      await goToGamePhase();\n      initiateGame();\n      await showNextQuestion();\n    }\n  });\n};\n\n// ##############################################################\nasync function showStartingScreen() {\n  // clear body\n  document.body.replaceChildren();\n  // reset vars\n  isLoading = false;\n  gameStarted = false;\n  answerClicked = false;\n  // create start screen\n  const landingPage = Template.createLandingPage();\n\n  document.body.appendChild(landingPage);\n  await sleep(10);\n  landingPage.classList.remove('scale-0');\n\n  document.getElementById('start-game-button').addEventListener('click', showStartGameForm);\n}\n// ##############################################################\nconst initialLoad = function initializeAppAndLoadLandingPage() {\n  document.documentElement.setAttribute('class', 'font-sans');\n  // set body styles\n  document.body.setAttribute(\n    'class',\n    'bg-slate-950 w-screen h-screen text-slate-50 grid items-center'\n  );\n  //   load landing page\n  showStartingScreen();\n};\n\nexport default initialLoad;\n"],"names":["HTMLtoText","htmlCode","tempDiv","document","createElement","innerHTML","textContent","appendChildren","element","children","forEach","child","appendChild","createElementWithClasses","elementTag","elementClassNames","undefined","setAttribute","_len2","arguments","length","attributes","Array","_key2","attribute","createContainer","classNames","id","container","elementClass","classList","add","_len","_key","getTransitionTime","Number","getComputedStyle","getPropertyValue","slice","async","time","Promise","resolve","setTimeout","difficulties","any","easy","medium","hard","categories","createStartForm","formContainer","startForm","closeBtn","closeBtnIcon","loading","loader","inputField","label","input","styles","lists","category","index","value","opt","Object","entries","difficulty","text","submitBtn","createLandingPage","header","title","startBtn","createGameTemplate","btnContainer","homeBtn","questionContainer","progressBarContainer","progressBar","style","width","correctAnswer","incorrectAnswers","optionsContainer","answers","randomIndex","Math","floor","random","splice","answer","answerBtn","trueBtn","falseBtn","createQuestionContainer","triviaItem","questionDesc","questionNumber","questionText","question","toString","type","this","correct_answer","incorrect_answers","static","score","maxScore","gameOverContainer","scoreboard","scoreboardTitle","scoreContainer","currentScoreSpan","slash","maxScoreSpan","getToken","previousToken","JSON","parse","localStorage","getItem","token","setItem","stringify","response","fetch","mode","ok","status","Error","statusText","tokenObject","json","response_code","response_message","resetToken","deleteToken","removeItem","CustomError","constructor","errorHeader","params","super","captureStackTrace","name","getMaxAmount","difficultyOptStr","category_question_count","code","TokenAPI","fetchTriviaData","amount","catOptionStr","diffOptionStr","tokenOptionStr","triviaData","questions","playerChoice","getNumberOfQuestions","getCurrentIndex","checkAnswer","isLoading","answerClicked","gameStarted","showFormLoading","getElementById","remove","hideFormLoading","setMaxAmountInput","maxAllowedAmount","TriviaAPI","min","currentValue","error","console","displayError","closeStartGameForm","startGameForm","form","querySelector","trTime","sleep","goBackToHome","currentContainer","body","firstElementChild","opacity","showStartingScreen","showNextQuestion","gameContainer","Template","createGameOverScreen","addEventListener","displayGameOverScreen","insertAdjacentElement","querySelectorAll","button","_ref","clientWidth","clientHeight","scrollWidth","scrollHeight","isOverflown","displayAnswer","chosenAnswerIsCorrect","chosenAnswer","getAttribute","pulseTime","pulseCount","removeAttribute","max","round","updateProgressBar","once","showStartGameForm","landingPage","e","preventDefault","formData","from","FormData","target","receivedGameData","dataList","newList","qData","newData","tempArr","push","convertHTMLValues","results","log","getGameData","gameTemplate","goToGamePhase","replaceChildren","documentElement"],"sourceRoot":""}