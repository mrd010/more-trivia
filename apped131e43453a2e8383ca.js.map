{"version":3,"file":"apped131e43453a2e8383ca.js","mappings":"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","sources":["webpack://more-trivia/./src/scripts/ElementCreator.js","webpack://more-trivia/./src/scripts/Sleep.js","webpack://more-trivia/./src/scripts/Lists.js","webpack://more-trivia/./src/scripts/Styles.js","webpack://more-trivia/./src/scripts/Template.js","webpack://more-trivia/./src/scripts/TokenAPI.js","webpack://more-trivia/./src/scripts/StorageController.js","webpack://more-trivia/./src/scripts/CustomError.js","webpack://more-trivia/./src/scripts/TriviaAPI.js","webpack://more-trivia/./src/scripts/TriviaGameHandler.js","webpack://more-trivia/./src/scripts/DisplayController.js"],"sourcesContent":["export const isOverflown = ({ clientWidth, clientHeight, scrollWidth, scrollHeight }) =>\n  scrollHeight > clientHeight || scrollWidth > clientWidth;\n// ##############################################################\nexport const HTMLtoText = function HTMLtoText(htmlCode) {\n  const tempDiv = document.createElement('div');\n  tempDiv.innerHTML = htmlCode;\n  return tempDiv.textContent;\n};\n\n// ############################################################################################################################################################\nexport function nameToId(name) {\n  return name.toLowerCase().split(' ').join('-');\n}\n\n// ############################################################################################################################################################\nexport function appendChildren(element, children) {\n  children.forEach((child) => element.appendChild(child));\n}\n\n// ############################################################################################################################################################\nexport function createElement(elementTag, elementClass, ...attributes) {\n  const element = document.createElement(elementTag);\n  if (elementClass !== undefined) {\n    element.classList.add(elementClass);\n  }\n\n  attributes.forEach((attribute) => {\n    element.setAttribute(attribute[0], attribute[1]);\n  });\n\n  return element;\n}\n\n// ############################################################################################################################################################\nexport function createElementWithClasses(elementTag, elementClassNames, ...attributes) {\n  const element = document.createElement(elementTag);\n  if (elementClassNames !== undefined) {\n    element.setAttribute('class', elementClassNames);\n  }\n\n  attributes.forEach((attribute) => {\n    element.setAttribute(attribute[0], attribute[1]);\n  });\n\n  return element;\n}\n\n// ############################################################################################################################################################\nexport const createContainer = function createContainer(classNames, id) {\n  const container = createElement('div', undefined);\n  if (classNames !== undefined) {\n    container.setAttribute('class', classNames);\n  }\n  if (id !== undefined) {\n    container.setAttribute('id', id);\n  }\n\n  return container;\n};\n\n// ############################################################################################################################################################\n\nexport function createMaterialIcon(style, className, name) {\n  const icon = createElement('span', className);\n  icon.classList.add(`material-symbols-${style}`);\n  icon.textContent = ` ${name} `;\n  return icon;\n}\n// ############################################################################################################################################################\n\nexport const createWeatherIcon = function createWeatherIcon(name, className = '') {\n  const icon = createElement('i', 'wi');\n  icon.classList.add(`wi-${name}`);\n  if (className !== '') {\n    icon.classList.add(className);\n  }\n  return icon;\n};\n// ############################################################################################################################################################\n\nexport const getTransitionTime = function getTransitionTime(element) {\n  return Number(getComputedStyle(element).getPropertyValue('transition-duration').slice(0, -1));\n};\n","const sleep = async function sleep(time) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      resolve();\n    }, time);\n  });\n};\n\nexport default sleep;\n","const lists = {\n  difficulties: {\n    any: 'Any Difficulty',\n    easy: 'Easy',\n    medium: 'Medium',\n    hard: 'Hard',\n  },\n\n  categories: [\n    'Any Category',\n    'General Knowledge',\n    'Entertainment: Books',\n    'Entertainment: Film',\n    'Entertainment: Music',\n    'Entertainment: Musicals, Theaters',\n    'Entertainment: Television',\n    'Entertainment: Video Games',\n    'Entertainment: Board Games',\n    'Science: Nature',\n    'Science: Computers',\n    'Science: Mathematics',\n    'Mythology',\n    'Sports',\n    'Geography',\n    'History',\n    'Politics',\n    'Art',\n    'Celebrities',\n    'Animals',\n    'Vehicles',\n    'Entertainment: Comics',\n    'Science: Gadgets',\n    'Entertainment: Anime, Manga',\n    'Entertainment: Cartoon, Animations',\n  ],\n};\n\nexport default lists;\n","const styles = {\n  inputFieldStyle: 'w-full flex flex-col p-2 gap-1',\n  inputStyle: 'px-2 py-1 w-full rounded-md border-2 border-slate-900/5 bg-slate-400/20',\n  labelStyle: 'text-sm text-slate-950/75 font-medium ml-2',\n  questionTextStyle:\n    'text-center overflow-y-auto font-medium text-xl leading-normal  px-6 pt-6 sm:text-2xl md:text-3xl lg:leading-relaxed max-h-full',\n  multipleAnswerBtnStyle:\n    'border-2 data-na:hover:bg-green-600/10 bg-slate-900  transition-colors font-medium capitalize data-na:active:bg-slate-50/25 grid place-items-center text-center lg:text-2xl rounded-xl h-10 lg:h-20 lg:w-full data-correct:border-green-500 data-correct:bg-green-800 data-wrong:border-red-500 data-wrong:bg-red-800 data-na:hover:border-green-500 data-correct:animate-ping-once data-wrong:animate-pulse-fast duration-300',\n  booleanAnswerBtnStyle:\n    'grid h-20 cursor-pointer place-items-center rounded-xl border-2 bg-slate-900 text-center text-lg font-bold capitalize shadow-inner transition-colors data-na:hover:bg-green-600/10 data-na:active:bg-slate-50/40 data-correct:border-green-500 data-correct:bg-green-800 data-wrong:border-red-500 data-wrong:bg-red-800 data-na:hover:border-green-500 sm:text-2xl lg:w-full data-correct:animate-ping-once data-wrong:animate-pulse-fast duration-300',\n  ratedStyle: [\n    'text-red-800',\n    'text-orange-800',\n    'text-amber-700',\n    'text-yellow-700',\n    'text-lime-700',\n    'text-green-600',\n    'text-emerald-600',\n  ],\n};\n\nexport default styles;\n","import lists from './Lists';\nimport {\n  createContainer,\n  createElementWithClasses,\n  appendChildren,\n  createMaterialIcon,\n} from './ElementCreator';\nimport styles from './Styles';\n\n// ###################################################\nclass Template {\n  // create start form #########################################\n  static createStartForm(settings) {\n    const formContainer = createContainer(\n      'absolute z-10 rounded-lg w-full h-full grid items-center',\n      'start-form-container'\n    );\n    const startForm = createElementWithClasses(\n      'form',\n      'grid bg-slate-100 gap-2 px-2 py-4 transition-transform duration-500 rounded-md text-slate-950 w-4/5 mx-auto max-w-md',\n      ['action', '#']\n    );\n    // close button\n    const closeBtn = createElementWithClasses(\n      'button',\n      'justify-self-end mr-2 text-slate-800',\n      ['type', 'button'],\n      ['id', 'close-form']\n    );\n    const closeBtnIcon = createElementWithClasses(\n      'span',\n      'material-symbols-rounded bg-slate-300/25 hover:bg-slate-400/25 active:bg-slate-600/25 transition-colors rounded-full p-1'\n    );\n    closeBtnIcon.textContent = 'close';\n    closeBtn.appendChild(closeBtnIcon);\n    startForm.appendChild(closeBtn);\n    // loading container\n    const loading = createContainer(\n      'w-full hidden h-full z-20 fixed top-0 left-0 grid items-center justify-center bg-slate-900/25 backdrop-blur-[2px]',\n      'start-loading'\n    );\n    const loader = createContainer('custom-loader');\n    loading.appendChild(loader);\n    startForm.appendChild(loading);\n    // form content --\n    let inputField;\n    let label;\n    let input;\n    // number of q input\n    inputField = createContainer(styles.inputFieldStyle);\n    label = createElementWithClasses('label', styles.labelStyle, ['for', 'number-of-questions']);\n    label.textContent = 'Number of Questions';\n    input = createElementWithClasses(\n      'input',\n      styles.inputStyle,\n      ['type', 'number'],\n      ['id', 'number-of-questions'],\n      ['name', 'amount'],\n      ['min', '1'],\n      ['max', '50'],\n      ['step', '1'],\n      ['value', settings.amount],\n      ['required', true]\n    );\n    appendChildren(inputField, [label, input]);\n    startForm.appendChild(inputField);\n    // select category\n    inputField = createContainer(styles.inputFieldStyle);\n    label = createElementWithClasses('label', styles.labelStyle, ['for', 'category']);\n    label.textContent = 'Select Category';\n    input = createElementWithClasses(\n      'select',\n      styles.inputStyle,\n      ['name', 'category'],\n      ['id', 'category'],\n      ['name', 'category'],\n      ['required', true]\n    );\n\n    lists.categories.forEach((category, index) => {\n      let value;\n      if (category === 'Any Category') {\n        value = 'any';\n      } else {\n        value = index + 8;\n      }\n      const opt = createElementWithClasses('option', 'text-sm', ['value', `${value}`]);\n      opt.textContent = category;\n      input.appendChild(opt);\n    });\n    input.value = settings.category;\n    appendChildren(inputField, [label, input]);\n    startForm.appendChild(inputField);\n    // select difficulty\n    inputField = createContainer(styles.inputFieldStyle);\n    label = createElementWithClasses('label', styles.labelStyle, ['for', 'difficulty']);\n    label.textContent = 'Select Difficulty';\n    input = createElementWithClasses(\n      'select',\n      styles.inputStyle,\n      ['name', 'difficulty'],\n      ['id', 'difficulty'],\n      ['required', true]\n    );\n    Object.entries(lists.difficulties).forEach((difficulty) => {\n      const [value, text] = difficulty;\n      const opt = createElementWithClasses('option', 'text-sm', ['value', `${value}`]);\n      opt.textContent = text;\n      input.appendChild(opt);\n    });\n    input.value = settings.difficulty;\n    appendChildren(inputField, [label, input]);\n    startForm.appendChild(inputField);\n    // submit button\n    inputField = createContainer('w-full p-2');\n    const submitBtn = createElementWithClasses(\n      'button',\n      'text-center w-full rounded-lg bg-slate-900 hover:bg-slate-800 active:bg-slate-700 font-bold transition-colors py-2 text-slate-50',\n      ['type', 'submit']\n    );\n    submitBtn.textContent = 'Start';\n    inputField.appendChild(submitBtn);\n    startForm.appendChild(submitBtn);\n    formContainer.appendChild(startForm);\n\n    return formContainer;\n  }\n\n  // create landing page #########################################\n  static createLandingPage() {\n    // create main container\n    const container = createContainer(\n      'grid place-content-center w-full h-full duration-500 transition-all scale-0',\n      'landing-page'\n    );\n    // create header (page title)\n    const header = createElementWithClasses(\n      'header',\n      'grid md:justify-items-center gap-4 place-content-center transition-opacity'\n    );\n    const title = createElementWithClasses(\n      'h1',\n      'text-5xl font-extrabold sm:text-6xl md:text-7xl lg:text-8xl font-display'\n    );\n    title.textContent = 'MoreTrivia';\n    // start button\n    const startBtn = createElementWithClasses(\n      'button',\n      'rounded-lg border-2 mx-2 hover:bg-slate-100/25 active:bg-slate-100 focus:bg-slate-100/25 active:text-slate-950 active:border-slate-950 font-bold transition-colors md:text-xl md:w-3/5 py-2',\n      ['id', 'start-game-button']\n    );\n    startBtn.textContent = 'Start';\n    appendChildren(header, [title, startBtn]);\n\n    container.appendChild(header);\n    return container;\n  }\n\n  // ########################################################\n  static createGameTemplate() {\n    const container = createContainer(\n      'grid grid-rows-[auto_minmax(0,1fr)_auto] gap-10 h-screen sm:p-5 duration-500 transition-opacity opacity-0',\n      'game-container'\n    );\n    // home button\n    const btnContainer = createContainer('grid sm:place-self-end', 'home');\n    const homeBtn = createElementWithClasses(\n      'button',\n      'p-2 m-2 font-bold rounded-lg bg-blue-900/25 shadow-sm sm:px-4 md:text-lg lg:text-xl lg:px-6 hover:bg-blue-900/40 active:bg-sky-800/50 transition-colors'\n    );\n    homeBtn.textContent = 'Home Screen';\n    btnContainer.appendChild(homeBtn);\n\n    // questions container\n    const questionContainer = createContainer(\n      'grid mx-4 max-h-full col-start-1 col-end-1 row-start-2 row-end-3 grid-rows-2',\n      'questions-container'\n    );\n\n    // progress bar\n    const progressBarContainer = createContainer(\n      'w-auto mx-4 bg-slate-200 rounded-full h-2.5 mb-4 grid'\n    );\n    const progressBar = createContainer(\n      'bg-blue-600 h-2.5 transition-[width] duration-1000 delay-200 rounded-full',\n      'progress-bar'\n    );\n    progressBar.style.width = '0%';\n    progressBarContainer.appendChild(progressBar);\n    appendChildren(container, [btnContainer, questionContainer, progressBarContainer]);\n\n    return container;\n  }\n\n  // ########################################################\n  static #createMultipleOptions(correctAnswer, incorrectAnswers) {\n    const optionsContainer = createElementWithClasses(\n      'div',\n      'grid gap-4 content-center p-2 my-4 lg:w-[50%] lg:mx-auto lg:grid-cols-2',\n      ['id', 'options']\n    );\n    const answers = incorrectAnswers;\n\n    const randomIndex = Math.floor(Math.random() * 4);\n    answers.splice(randomIndex, 0, correctAnswer);\n    answers.forEach((answer) => {\n      const answerBtn = createElementWithClasses(\n        'button',\n        styles.multipleAnswerBtnStyle,\n        ['data-answer', 'na'],\n        ['data-value', `${answer}`]\n      );\n      answerBtn.textContent = answer;\n      optionsContainer.appendChild(answerBtn);\n    });\n    return optionsContainer;\n  }\n\n  // ########################################################\n  static #createBooleanOptions() {\n    const optionsContainer = createElementWithClasses(\n      'div',\n      'grid grid-cols-2 gap-4 content-center p-4 lg:grid-cols-1 lg:grid-rows-[auto_auto] lg:w-[33%] lg:mx-auto',\n      ['id', 'options']\n    );\n    // true button\n    const trueBtn = createElementWithClasses(\n      'button',\n      styles.booleanAnswerBtnStyle,\n      ['data-answer', 'na'],\n      ['data-value', 'True']\n    );\n    trueBtn.textContent = 'True';\n    // false button\n    const falseBtn = createElementWithClasses(\n      'button',\n      styles.booleanAnswerBtnStyle,\n      ['data-answer', 'na'],\n      ['data-value', 'False']\n    );\n    falseBtn.textContent = 'False';\n\n    appendChildren(optionsContainer, [trueBtn, falseBtn]);\n    return optionsContainer;\n  }\n\n  // ########################################################\n  static createQuestionContainer(index, triviaItem) {\n    const questionContainer = createContainer(\n      'grid mx-4 max-h-full col-start-1 col-end-1 duration-1000 ease-in-out row-start-2 row-end-3 grid-rows-2 opacity-0 transition-opacity',\n      'questions-container'\n    );\n\n    // question details\n    const questionDesc = createContainer(\n      'bg-slate-200/10 relative rounded-2xl max-h-full px-2 py-6 lg:p-10 gap-1 grid lg:mx-[10%]'\n    );\n    const questionNumber = createElementWithClasses(\n      'span',\n      'font-bold px-4 py-1 text-xl bg-slate-50 text-slate-800 w-12 h-12 grid place-content-center italic rounded-full absolute top-0 left-10 lg:left-20 -translate-y-2/4 -translate-x-2/4 lg:w-20 lg:h-20 lg:text-3xl',\n      ['id', 'index']\n    );\n    questionNumber.textContent = `#${index + 1}`;\n    const questionText = createElementWithClasses('p', styles.questionTextStyle);\n    questionText.innerHTML = triviaItem.question.toString();\n    appendChildren(questionDesc, [questionNumber, questionText]);\n    questionContainer.appendChild(questionDesc);\n    // question options\n    let optionsContainer = createContainer();\n\n    if (triviaItem.type === 'boolean') {\n      optionsContainer = this.#createBooleanOptions();\n    } else if (triviaItem.type === 'multiple') {\n      optionsContainer = this.#createMultipleOptions(\n        triviaItem.correct_answer,\n        triviaItem.incorrect_answers\n      );\n    }\n\n    questionContainer.appendChild(optionsContainer);\n    return questionContainer;\n  }\n\n  // ########################################################\n  static createGameOverScreen = function createGameOverScreen(score, maxScore) {\n    const gameOverContainer = createContainer(\n      'grid gap-2 w-full h-full content-center duration-500 text-center sm:w-80 mx-auto transition-opacity opacity-0',\n      'game-over-container'\n    );\n    const title = createElementWithClasses('h2', 'text-4xl p-2 font-bold font-display');\n    // title\n    title.textContent = 'Trivia Quiz Ended';\n    // scoreboard\n    const scoreboard = createContainer('bg-slate-50 p-2 sm:rounded-lg text-slate-950');\n    const scoreboardTitle = createElementWithClasses('p', 'text-lg font-thin text-slate-950/70');\n    scoreboardTitle.textContent = 'Your Score';\n    const scoreContainer = createContainer(\n      'flex gap-2 items-center text-5xl p-1 justify-center opacity-0 transition-opacity duration-500',\n      'score-container'\n    );\n    const currentScoreSpan = createElementWithClasses('span', 'font-semibold', ['id', 'score']);\n    currentScoreSpan.classList.add(\n      `${styles.ratedStyle[Math.floor((score / maxScore) * (styles.ratedStyle.length - 1))]}`\n    );\n    currentScoreSpan.textContent = score;\n    const slash = createElementWithClasses('span', 'text-2xl font-thin');\n    slash.textContent = '/';\n    const maxScoreSpan = createElementWithClasses('span', 'font-semibold', ['id', 'max-score']);\n    maxScoreSpan.textContent = maxScore;\n    appendChildren(scoreContainer, [currentScoreSpan, slash, maxScoreSpan]);\n    appendChildren(scoreboard, [scoreboardTitle, scoreContainer]);\n\n    // home button\n    const homeBtn = createElementWithClasses(\n      'button',\n      'p-3 font-bold rounded-lg bg-blue-900/25 shadow-sm hover:bg-blue-900/40 active:bg-sky-800/50 transition-colors m-4 border-2 border-slate-50 sm:mx-0 md:text-lg lg:text-xl lg:px-6',\n      ['id', 'home-screen-button']\n    );\n    homeBtn.textContent = 'Home Screen';\n    appendChildren(gameOverContainer, [title, scoreboard, homeBtn]);\n    return gameOverContainer;\n  };\n\n  // ########################################################\n  static createConfirmAlert = function createConfirmAlert() {\n    const confirmContainer = createContainer(\n      'bg-slate-50 text-slate-950 p-4 rounded-lg flex flex-col items-center gap-2 mx-4 sm:w-max sm:justify-self-center',\n      'confirm-container'\n    );\n    const confirmText = createElementWithClasses('p', 'px-4 text-lg');\n    confirmText.textContent = 'Abandon current session and start a new game?';\n    confirmContainer.appendChild(confirmText);\n    // buttons\n    const btnContainer = createContainer('grid grid-cols-2 items-center gap-5 py-2');\n    // yes button\n    const yesBtn = createElementWithClasses(\n      'button',\n      'grid grid-cols-[auto_100px] rounded-md text-slate-50 font-semibold items-center bg-green-700 active:bg-green-800 opacity-90 hover:opacity-100 transition-colors',\n      ['id', 'yes-button']\n    );\n    let btnIcon = createMaterialIcon('rounded', 'px-2', 'close');\n    let btnText = createElementWithClasses('span', 'border-l border-slate-100/40 py-2');\n    btnText.textContent = 'Yes';\n    appendChildren(yesBtn, [btnIcon, btnText]);\n    // no button\n    const noBtn = createElementWithClasses(\n      'button',\n      'grid grid-cols-[auto_100px] rounded-md text-slate-50 font-semibold items-center bg-red-700 active:bg-red-800 opacity-90 hover:opacity-100 transition-colors',\n      ['id', 'no-button']\n    );\n    btnIcon = createMaterialIcon('rounded', 'px-2', 'done');\n    btnText = createElementWithClasses('span', 'border-l border-slate-100/40 py-2');\n    btnText.textContent = 'No';\n    appendChildren(noBtn, [btnIcon, btnText]);\n\n    appendChildren(btnContainer, [yesBtn, noBtn]);\n    confirmContainer.appendChild(btnContainer);\n\n    return confirmContainer;\n  };\n\n  // ########################################################\n  static createErrorElement = function createErrorElement(errorMessage, errorTitle = 'Error') {\n    const errorContainer = createContainer(\n      'fixed top-0 m-6 rounded-lg border-2 border-slate-50 bg-red-700/80 hover:bg-red-700/100 opacity-90 hover:opacity-100 transition-all shadow-md p-2'\n    );\n    const errorHeader = createElementWithClasses(\n      'h3',\n      'text-slate-50 text-lg font-bold md:text-xl'\n    );\n    errorHeader.textContent = errorTitle;\n    const errorText = createElementWithClasses('p', 'text-sm font-medium text-slate-50 md:text-md');\n    errorText.textContent = errorMessage;\n    appendChildren(errorContainer, [errorHeader, errorText]);\n    return errorContainer;\n  };\n}\n\nexport default Template;\n","import { loadToken, saveToken, removeToken } from './StorageController';\n\nclass TokenAPI {\n  static #token;\n\n  static #baseApiTokenURL = 'https://opentdb.com/api_token.php';\n\n  // ##############################################################\n  static async getToken() {\n    if (!this.#token) {\n      const previousToken = loadToken();\n      if (previousToken) {\n        this.#token = previousToken;\n      } else {\n        const newToken = await this.#getNewToken();\n        if (newToken instanceof Error) {\n          return newToken;\n        }\n        this.#token = newToken;\n        saveToken(this.#token);\n      }\n    }\n    return this.#token;\n  }\n\n  // ##############################################################\n  static async #getNewToken() {\n    const response = await fetch(`${this.#baseApiTokenURL}?command=request`, { mode: 'cors' });\n    if (!response.ok || response.status !== 200) {\n      throw new Error(response.statusText);\n    }\n    const tokenObject = await response.json();\n    if (tokenObject.response_code === 0) {\n      return tokenObject.token;\n    }\n    return new Error(tokenObject.response_message);\n  }\n\n  // ##############################################################\n  static async resetToken() {\n    if (this.#token) {\n      const response = await fetch(\n        `${this.#baseApiTokenURL}?command=request&token=${this.#token}`,\n        {\n          mode: 'cors',\n        }\n      );\n      if (!response.ok || response.status !== 200) {\n        throw new Error(response.statusText);\n      }\n      const tokenObject = await response.json();\n      if (tokenObject.response_code === 0) {\n        this.#token = tokenObject.token;\n      } else {\n        throw new Error('renewal failed');\n      }\n    }\n  }\n\n  // ##############################################################\n  static deleteToken() {\n    this.#token = null;\n    removeToken();\n  }\n}\n\nexport default TokenAPI;\n","export const saveToken = function saveToken(token) {\n  localStorage.setItem('token', JSON.stringify(token));\n};\n\nexport const loadToken = function loadToken() {\n  return JSON.parse(localStorage.getItem('token'));\n};\n\nexport const removeToken = function removeToken() {\n  localStorage.removeItem('token');\n};\n\nexport const saveSettings = function saveSettings(settings) {\n  localStorage.setItem('settings', JSON.stringify(settings));\n};\n\nexport const loadSettings = function loadSettings() {\n  return JSON.parse(localStorage.getItem('settings'));\n};\n","class CustomError extends Error {\n  constructor(errorHeader = 'Error', ...params) {\n    // Pass remaining arguments (including vendor specific ones) to parent constructor\n    super(...params);\n\n    // Maintains proper stack trace for where our error was thrown (only available on V8)\n    if (Error.captureStackTrace) {\n      Error.captureStackTrace(this, CustomError);\n    }\n\n    this.name = 'CustomError';\n    // Custom debugging information\n    this.errorHeader = errorHeader;\n  }\n}\n\nexport default CustomError;\n","import TokenAPI from './TokenAPI';\nimport CustomError from './CustomError';\n\nclass TriviaAPI {\n  static #baseApiURL = 'https://opentdb.com/api.php';\n\n  static #baseApiCategoryCountURL = 'https://opentdb.com/api_count.php';\n\n  // ##############################################################\n  static async getMaxAmount(category, difficulty) {\n    // no maximum for any category\n    if (category === 'any') {\n      return 500;\n    }\n\n    const response = await fetch(`${this.#baseApiCategoryCountURL}?category=${category}`, {\n      mode: 'cors',\n    });\n    if (response.ok && response.status === 200) {\n      const difficultyOptStr = `_${difficulty}`;\n      const categoryMaxQuestions = await response.json();\n      return categoryMaxQuestions.category_question_count[\n        `total${difficulty === 'any' ? '' : difficultyOptStr}_question_count`\n      ];\n    }\n    throw new Error(response.statusText);\n  }\n\n  // ##############################################################\n\n  static async #errorHandler(code) {\n    if (code === 1) {\n      return new CustomError(\n        'No Results',\n        \"Could not return results. The API doesn't have enough questions for your query.\"\n      );\n    }\n    if (code === 2) {\n      return new CustomError(\n        'Invalid Parameter',\n        \"Contains an invalid parameter. Arguments passed in aren't valid.\"\n      );\n    }\n    if (code === 3) {\n      TokenAPI.deleteToken();\n      return new CustomError('Token Not Found', 'Session Token does not exist.');\n    }\n    if (code === 4) {\n      TokenAPI.resetToken();\n      return new CustomError(\n        'Token Empty',\n        'Session Token has returned all possible questions for the specified query. Resetting the Token is necessary.'\n      );\n    }\n    if (code === 5) {\n      return new CustomError(\n        'Rate Limit',\n        'Too many requests have occurred. Each IP can only access the API once every 5 seconds.'\n      );\n    }\n    return new Error('Something Strange happened');\n  }\n\n  // ##############################################################\n  static async fetchTriviaData(amount, category, difficulty, token) {\n    const catOptionStr = category === 'any' ? '' : `&category=${category}`;\n    const diffOptionStr = difficulty === 'any' ? '' : `&difficulty=${difficulty}`;\n    const tokenOptionStr = token === undefined ? '' : `&token=${token}`;\n\n    const response = await fetch(\n      `${this.#baseApiURL}?amount=${amount}${catOptionStr}${diffOptionStr}${tokenOptionStr}`,\n      {\n        mode: 'cors',\n      }\n    );\n    if (!response.ok || response.status !== 200) {\n      throw new Error(response.statusText);\n    }\n    const triviaData = await response.json();\n    if (triviaData.response_code === 0) {\n      return triviaData;\n    }\n    const error = this.#errorHandler(triviaData.response_code);\n    return error;\n  }\n\n  // ##############################################################\n}\n\nexport default TriviaAPI;\n","import { HTMLtoText } from './ElementCreator';\nimport TokenAPI from './TokenAPI';\nimport TriviaAPI from './TriviaAPI';\n\nlet questions;\nlet playerChoice;\nlet index;\nlet score;\n\nconst convertHTMLValues = function convertHTMLValues(dataList) {\n  const newList = [];\n  dataList.forEach((qData) => {\n    const newData = qData;\n    newData.question = HTMLtoText(newData.question);\n    newData.correct_answer = HTMLtoText(newData.correct_answer);\n\n    if (newData.type === 'multiple') {\n      const tempArr = [];\n      newData.incorrect_answers.forEach((answer) => {\n        tempArr.push(HTMLtoText(answer));\n      });\n      newData.incorrect_answers = tempArr;\n    }\n    newList.push(newData);\n  });\n  return newList;\n};\n\nexport const getNumberOfQuestions = function getNumberOfQuestions() {\n  return questions.length;\n};\n\nexport const getCurrentIndex = function getCurrentIndex() {\n  return index;\n};\n\nexport const getCurrentQuestion = function getCurrentQuestion() {\n  return questions[index];\n};\n\nexport const getScore = function getScore() {\n  return score;\n};\n\nexport const checkAnswer = function checkIfAnswerIsCorrect(answer) {\n  return answer === questions[index].correct_answer;\n};\n\nexport const playerChose = function playerChose(chosenAnswer) {\n  playerChoice = chosenAnswer;\n  if (checkAnswer(playerChoice)) {\n    score += 1;\n    return true;\n  }\n  return false;\n};\n\nexport const getNextQuestion = function getNextQuestion() {\n  index += 1;\n  if (questions[index]) {\n    return questions[index];\n  }\n  return null;\n};\n\nexport const initiateGame = function initiateGame() {\n  score = 0;\n  index = -1;\n};\n\nexport const getGameData = async function getGameData(amount, category, difficulty) {\n  // get or create token\n  const token = await TokenAPI.getToken();\n  if (token instanceof Error) {\n    return token;\n  }\n  // get trivia data\n  const triviaData = await TriviaAPI.fetchTriviaData(amount, category, difficulty, token);\n  if (triviaData instanceof Error) {\n    return triviaData;\n  }\n  questions = convertHTMLValues(triviaData.results);\n  return true;\n};\n","/* eslint-disable no-use-before-define */\nimport { getTransitionTime, isOverflown } from './ElementCreator';\nimport sleep from './Sleep';\nimport { loadSettings, saveSettings } from './StorageController';\nimport Template from './Template';\nimport TriviaAPI from './TriviaAPI';\nimport {\n  checkAnswer,\n  getCurrentIndex,\n  getGameData,\n  getNextQuestion,\n  getNumberOfQuestions,\n  getScore,\n  initiateGame,\n  playerChose,\n} from './TriviaGameHandler';\n\nlet isLoading;\nlet answerClicked;\nlet gameStarted;\n\n// ##############################################################\nconst showFormLoading = function showFormLoading() {\n  if (!isLoading) {\n    isLoading = true;\n    document.getElementById('start-loading').classList.remove('hidden');\n  }\n};\n// ##############################################################\nconst hideFormLoading = function hideFormLoading() {\n  if (isLoading) {\n    document.getElementById('start-loading').classList.add('hidden');\n    isLoading = false;\n  }\n};\n// ##############################################################\nconst displayError = function displayError(error) {\n  const errorContainer = Template.createErrorElement(error.message, error.errorHeader);\n  document.getElementById('start-form-container').appendChild(errorContainer);\n  setTimeout(() => {\n    errorContainer.remove();\n  }, 5000);\n};\n// ##############################################################\nconst setMaxAmountInput = async function setMaxAmountInput() {\n  const category = document.getElementById('category').value;\n  const difficulty = document.getElementById('difficulty').value;\n  try {\n    showFormLoading();\n    let maxAllowedAmount = await TriviaAPI.getMaxAmount(category, difficulty);\n    hideFormLoading();\n    maxAllowedAmount = Math.min(maxAllowedAmount, 50);\n    const amount = document.getElementById('number-of-questions');\n    amount.setAttribute('max', maxAllowedAmount);\n    const currentValue = amount.value;\n    amount.value = Math.min(maxAllowedAmount, currentValue);\n  } catch (error) {\n    displayError(error);\n  }\n};\n// ##############################################################\nconst closeStartGameForm = async function closeStartANewGameForm() {\n  const startGameForm = document.getElementById('start-form-container');\n  const form = startGameForm.querySelector('form');\n  const trTime = getTransitionTime(form);\n  form.classList.remove('scale-y-100');\n  document.querySelector('#landing-page header').classList.remove('opacity-0');\n\n  await sleep(trTime * 1000 + 10);\n  startGameForm.remove();\n};\n\n// ##############################################################\nconst goBackToHome = async function goBackToHome() {\n  const currentContainer = document.body.firstElementChild;\n  const trTime = getTransitionTime(currentContainer);\n  currentContainer.style.opacity = '0';\n  await sleep(trTime * 1000 + 100);\n  currentContainer.remove();\n  await sleep(10);\n  showStartingScreen();\n};\n// ##############################################################\nconst displayGameOverScreen = async function displayGameOverScreen() {\n  let trTime;\n  const gameContainer = document.getElementById('game-container');\n  if (gameContainer) {\n    gameContainer.style.opacity = '0';\n    trTime = getTransitionTime(gameContainer);\n    await sleep(trTime * 1000 + 10);\n    gameContainer.remove();\n  }\n  // create game over page\n  const gameOverContainer = Template.createGameOverScreen(getScore(), getNumberOfQuestions());\n  document.body.appendChild(gameOverContainer);\n  await sleep(20);\n  gameOverContainer.style.opacity = '1';\n  trTime = getTransitionTime(gameOverContainer);\n  await sleep(trTime * 1000 + 10);\n\n  document.getElementById('score-container').style.opacity = '1';\n  document.getElementById('home-screen-button').addEventListener('click', goBackToHome);\n};\n\n// ##############################################################\nconst showConfirmDialogue = function showConfirmDialogue() {\n  const confirmContainer = Template.createConfirmAlert();\n  const gameContainer = document.getElementById('game-container');\n  gameContainer.classList.add('hidden');\n  document.body.appendChild(confirmContainer);\n\n  // events\n  confirmContainer.querySelector('#no-button').addEventListener('click', () => {\n    confirmContainer.remove();\n    gameContainer.classList.remove('hidden');\n  });\n  confirmContainer.querySelector('#yes-button').addEventListener('click', goBackToHome);\n};\n// ##############################################################\nconst goToGamePhase = async function goToGamePhase() {\n  // remove landing page\n  const landingPage = document.getElementById('landing-page');\n  await closeStartGameForm();\n  let trTime = getTransitionTime(landingPage);\n  landingPage.classList.add('opacity-0');\n  landingPage.classList.remove('opacity-100');\n  await sleep(trTime * 2 * 1000 + 10);\n  landingPage.remove();\n  // show game phase template\n  const gameTemplate = Template.createGameTemplate();\n  document.body.appendChild(gameTemplate);\n  await sleep(10);\n  gameTemplate.classList.add('opacity-100');\n  trTime = getTransitionTime(gameTemplate);\n  await sleep(trTime * 1000 + 10);\n  gameTemplate.querySelector('#home button').addEventListener('click', () => {\n    if (gameStarted) {\n      showConfirmDialogue();\n    }\n  });\n};\n\n// ##############################################################\nconst updateProgressBar = async function updateProgressBar() {\n  const progressBar = document.getElementById('progress-bar');\n  const trTime = getTransitionTime(progressBar);\n  progressBar.style.width = `${Math.round(\n    ((getCurrentIndex() + 1) / getNumberOfQuestions()) * 100\n  )}%`;\n  await sleep(trTime * 1000 + 10);\n};\n// ##############################################################\nconst showNextQuestion = async function showNextQuestion() {\n  // if end of quiz\n  const question = getNextQuestion();\n  if (question === null) {\n    await displayGameOverScreen();\n    return;\n  }\n\n  // remove previous question\n  let questionContainer = document.getElementById('questions-container');\n  if (questionContainer) {\n    const trTime = getTransitionTime(questionContainer);\n    questionContainer.classList.add('opacity-0');\n    questionContainer.classList.remove('opacity-100');\n    await sleep(trTime * 1000 + 10);\n    questionContainer.remove();\n  }\n\n  // create new question page\n  questionContainer = Template.createQuestionContainer(getCurrentIndex(), question);\n  document.getElementById('home').insertAdjacentElement('afterend', questionContainer);\n  await sleep(20);\n  if (question.type === 'multiple') {\n    document.querySelectorAll('#options button').forEach((button) => {\n      if (isOverflown(button)) {\n        button.classList.remove('text-2xl');\n        button.classList.add('text-sm');\n      }\n    });\n  }\n\n  questionContainer.classList.add('opacity-100');\n\n  answerClicked = false;\n\n  // ##############################################################\n  const displayAnswer = async function displayAnswer() {\n    if (!answerClicked) {\n      answerClicked = true;\n      const chosenAnswer = this.getAttribute('data-value');\n      const chosenAnswerIsCorrect = playerChose(chosenAnswer);\n      let pulseTime = 0;\n      let pulseCount = 0;\n      if (chosenAnswerIsCorrect) {\n        this.setAttribute('data-answer', 'correct');\n      } else {\n        this.setAttribute('data-answer', 'wrong');\n        pulseTime = getTransitionTime(this);\n        pulseCount = getComputedStyle(this).getPropertyValue('animation-iteration-count');\n      }\n      document.querySelectorAll('#options button').forEach((answerBtn) => {\n        answerBtn.setAttribute('disabled', '');\n        if (answerBtn !== this) {\n          answerBtn.removeAttribute('data-answer');\n          if (!chosenAnswerIsCorrect && checkAnswer(answerBtn.getAttribute('data-value'))) {\n            answerBtn.setAttribute('data-answer', 'correct');\n          }\n        }\n      });\n      const trTime = Math.max(pulseTime * pulseCount * 1000, 1000);\n      await sleep(trTime + 500);\n      await updateProgressBar();\n      showNextQuestion();\n    }\n  };\n  // event listeners\n  document.querySelectorAll('#options button').forEach((answerBtn) => {\n    answerBtn.addEventListener('click', displayAnswer, { once: true });\n  });\n};\n\n// ##############################################################\nconst showStartGameForm = function showStartANewGameForm() {\n  if (isLoading || gameStarted) {\n    return;\n  }\n  // show form\n  const settings = loadSettings() || { amount: 10, category: 'any', difficulty: 'any' };\n  const startGameForm = Template.createStartForm(settings);\n  const landingPage = document.getElementById('landing-page');\n  startGameForm.querySelector('form').classList.add('scale-y-0');\n  landingPage.appendChild(startGameForm);\n  setTimeout(() => {\n    startGameForm.querySelector('form').classList.add('scale-y-100');\n    landingPage.querySelector('header').classList.add('opacity-0');\n  }, 10);\n\n  // add events\n  // close form event\n  document.getElementById('close-form').addEventListener('click', closeStartGameForm);\n  // change input event\n  startGameForm.querySelector('#category').addEventListener('change', setMaxAmountInput);\n  startGameForm.querySelector('#difficulty').addEventListener('change', setMaxAmountInput);\n  // form submit event\n  startGameForm.querySelector('form').addEventListener('submit', async (e) => {\n    e.preventDefault();\n    if (isLoading || gameStarted) {\n      return;\n    }\n    const formData = Array.from(new FormData(e.target));\n    const amount = Number(formData[0][1]);\n    const category = formData[1][1];\n    const difficulty = formData[2][1];\n\n    let receivedGameData;\n    showFormLoading();\n    try {\n      receivedGameData = await getGameData(amount, category, difficulty);\n      if (receivedGameData instanceof Error) {\n        throw receivedGameData;\n      } else {\n        hideFormLoading();\n        gameStarted = true;\n        saveSettings({ amount, category, difficulty });\n        await goToGamePhase();\n        initiateGame();\n        await showNextQuestion();\n      }\n    } catch (error) {\n      displayError(error);\n      hideFormLoading();\n    }\n  });\n};\n\n// ##############################################################\nasync function showStartingScreen() {\n  // clear body\n  document.body.replaceChildren();\n  // reset vars\n  isLoading = false;\n  gameStarted = false;\n  answerClicked = false;\n  // create start screen\n  const landingPage = Template.createLandingPage();\n\n  document.body.appendChild(landingPage);\n  await sleep(10);\n  landingPage.classList.remove('scale-0');\n\n  document.getElementById('start-game-button').addEventListener('click', showStartGameForm);\n}\n// ##############################################################\nconst initialLoad = function initializeAppAndLoadLandingPage() {\n  document.documentElement.setAttribute('class', 'font-sans');\n  // set body styles\n  document.body.setAttribute(\n    'class',\n    'bg-slate-950 w-screen h-screen text-slate-50 grid items-center'\n  );\n  //   load landing page\n  showStartingScreen();\n};\n\nexport default initialLoad;\n"],"names":["HTMLtoText","htmlCode","tempDiv","document","createElement","innerHTML","textContent","appendChildren","element","children","forEach","child","appendChild","elementTag","elementClass","undefined","classList","add","_len","arguments","length","attributes","Array","_key","attribute","setAttribute","createElementWithClasses","elementClassNames","_len2","_key2","createContainer","classNames","id","container","createMaterialIcon","style","className","name","icon","getTransitionTime","Number","getComputedStyle","getPropertyValue","slice","async","time","Promise","resolve","setTimeout","difficulties","any","easy","medium","hard","categories","createStartForm","settings","formContainer","startForm","closeBtn","closeBtnIcon","loading","loader","inputField","label","input","styles","amount","lists","category","index","value","opt","Object","entries","difficulty","text","submitBtn","createLandingPage","header","title","startBtn","createGameTemplate","btnContainer","homeBtn","questionContainer","progressBarContainer","progressBar","width","correctAnswer","incorrectAnswers","optionsContainer","answers","randomIndex","Math","floor","random","splice","answer","answerBtn","trueBtn","falseBtn","createQuestionContainer","triviaItem","questionDesc","questionNumber","questionText","question","toString","type","this","correct_answer","incorrect_answers","static","score","maxScore","gameOverContainer","scoreboard","scoreboardTitle","scoreContainer","currentScoreSpan","slash","maxScoreSpan","confirmContainer","confirmText","yesBtn","btnIcon","btnText","noBtn","errorMessage","errorTitle","errorContainer","errorHeader","errorText","getToken","previousToken","JSON","parse","localStorage","getItem","newToken","Error","token","setItem","stringify","response","fetch","mode","ok","status","statusText","tokenObject","json","response_code","response_message","resetToken","deleteToken","removeItem","CustomError","constructor","params","super","captureStackTrace","getMaxAmount","difficultyOptStr","category_question_count","code","TokenAPI","fetchTriviaData","catOptionStr","diffOptionStr","tokenOptionStr","triviaData","questions","playerChoice","getNumberOfQuestions","getCurrentIndex","checkAnswer","isLoading","answerClicked","gameStarted","showFormLoading","getElementById","remove","hideFormLoading","displayError","error","Template","createErrorElement","message","setMaxAmountInput","maxAllowedAmount","TriviaAPI","min","currentValue","closeStartGameForm","startGameForm","form","querySelector","trTime","sleep","goBackToHome","currentContainer","body","firstElementChild","opacity","showStartingScreen","showNextQuestion","gameContainer","createGameOverScreen","addEventListener","displayGameOverScreen","insertAdjacentElement","querySelectorAll","button","_ref","clientWidth","clientHeight","scrollWidth","scrollHeight","isOverflown","displayAnswer","chosenAnswerIsCorrect","chosenAnswer","getAttribute","pulseTime","pulseCount","removeAttribute","max","round","updateProgressBar","once","showStartGameForm","landingPage","e","preventDefault","formData","from","FormData","target","receivedGameData","dataList","newList","qData","newData","tempArr","push","convertHTMLValues","results","getGameData","saveSettings","gameTemplate","createConfirmAlert","showConfirmDialogue","goToGamePhase","replaceChildren","documentElement"],"sourceRoot":""}